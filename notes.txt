Card borders are no longer colored by subject.
Favorites page: 
    Card needs all headers and data
    Card needs favorites stars and ability to remove card from favorites

User needs ability to include different lists other than favorites (Possibly openers, closers, etc...)


app.get('/favorites', requireAuth, async (req, res) => {
  console.log("Favorites route reached");
  try {
    const userId = req.session.user.user_id;

    // Fetch favorites with card details from tarbell table
    const favorites = await db.favorites.findAll({
      where: { user_id: userId },
      include: [{
        model: db.tarbell, // Include the associated tarbell (card) data
        attributes: ['lesson', 'subject', 'title', 'timestamp', 'volume', 'page', 'description', 'book_description', 'inventor']
      }]
    });

    // Mark each favorite with isFavorite: true
    favorites.forEach(favorite => {
      favorite.isFavorite = true;
    });

    res.render('favorites', { favorites: favorites, user: req.session.user });

  } catch (error) {
    console.error('Error fetching favorites:', error);
    res.status(500).send('Error fetching favorites');
  }
});

// Below Works (for the most part, stars do NOT work correctly, everything else does)
// Get favorites route
app.get('/favorites', requireAuth, async (req, res) => { // Apply requireAuth middleware
    console.log("Favorites route reached");
    try {
        const userId = req.session.user.user_id;
        const favorites = await db.favorites.findAll({
            where: {user_id: userId},
            attributes: ['card_id', 'lesson','subject','title','timestamp','volume','page','description','book_description','inventor'], 
        });

        const cardIds = favorites.map((favorite) => favorite.card_id);
        console.log("Favorite CardIds: ", cardIds);
        const cards = await db.tarbell.findAll({
            where: {id: cardIds},
        });

        

        console.log("Cards: ", cards);
        res.render('favorites', {favorites: cards, user: req.session.user});
    } catch (error) {
        console.error('Error fetching favorites:', error);
        res.status(500).send('Error fetching favorites');
    }
});